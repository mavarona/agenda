{"ast":null,"code":"var _jsxFileName = \"/Users/mavl/Mavl/React/2020/task/client/src/components/tasks/ListTask.js\";\nimport React, { Fragment, useContext } from 'react';\nimport Task from './Task';\nimport projectContext from '../../context/projects/projectContext';\nimport taskContext from '../../context/tasks/taskContext';\n\nconst ListTask = () => {\n  const dataProjectContext = useContext(projectContext);\n  const {\n    project,\n    deleteProject\n  } = dataProjectContext;\n  const dataTaskContext = useContext(taskContext);\n  const {\n    tasksProject\n  } = dataTaskContext;\n  if (!project) return React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \" No se ha seleccionado ning\\xFAn proyecto \");\n  const [currentProject] = project;\n\n  const onClickDelete = () => {\n    deleteProject(currentProject.id);\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \" Proyecto: \", currentProject.name, \" \"), \" \", React.createElement(\"ul\", {\n    className: \"listado-tareas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \" \", tasksProject.length === 0 ? React.createElement(\"li\", {\n    className: \"tarea\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \" No hay tareas \") : tasksProject.map(task => React.createElement(Task, {\n    key: task.id,\n    task: task,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), \" \"), \" \", React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-eliminar\",\n    onClick: onClickDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Elminar Proyecto & times; \"), \" \");\n};\n\nexport default ListTask;","map":{"version":3,"sources":["/Users/mavl/Mavl/React/2020/task/client/src/components/tasks/ListTask.js"],"names":["React","Fragment","useContext","Task","projectContext","taskContext","ListTask","dataProjectContext","project","deleteProject","dataTaskContext","tasksProject","currentProject","onClickDelete","id","name","length","map","task"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,OAAOC,WAAP,MAAwB,iCAAxB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACf,QAAMC,kBAAkB,GAAGL,UAAU,CAACE,cAAD,CAArC;AACA,QAAM;AAAEI,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA6BF,kBAAnC;AAEA,QAAMG,eAAe,GAAGR,UAAU,CAACG,WAAD,CAAlC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAmBD,eAAzB;AAEA,MAAI,CAACF,OAAL,EAAc,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAAP;AAEd,QAAM,CAACI,cAAD,IAAmBJ,OAAzB;;AAEA,QAAMK,aAAa,GAAG,MAAM;AACxBJ,IAAAA,aAAa,CAACG,cAAc,CAACE,EAAhB,CAAb;AACH,GAFD;;AAIA,SAAS,oBACL,QADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACiBF,cAAc,CAACG,IADhC,MAFK,OAGyC;AAC3C,IAAA,SAAS,EAAG,gBAD+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAE1CJ,YAAY,CAACK,MAAb,KAAwB,CAAxB,GACE;AAAK,IAAA,SAAS,EAAG,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,GACoDL,YAAY,CAACM,GAAb,CAAiBC,IAAI,IAAM,oBACvE,IADuE;AAClE,IAAA,GAAG,EAAKA,IAAI,CAACJ,EADqD;AAEvE,IAAA,IAAI,EAAKI,IAF8D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA3B,CAHV,MAHzC,OAaI;AAEL,IAAA,IAAI,EAAG,QAFF;AAGL,IAAA,SAAS,EAAG,kBAHP;AAIL,IAAA,OAAO,EAAKL,aAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAbJ,MAAT;AAsBC,CArCT;;AAuCQ,eAAeP,QAAf","sourcesContent":["import React, { Fragment, useContext } from 'react';\nimport Task from './Task';\nimport projectContext from '../../context/projects/projectContext';\nimport taskContext from '../../context/tasks/taskContext';\n\nconst ListTask = () => {\n        const dataProjectContext = useContext(projectContext);\n        const { project, deleteProject } = dataProjectContext;\n\n        const dataTaskContext = useContext(taskContext);\n        const { tasksProject } = dataTaskContext;\n\n        if (!project) return <h2 > No se ha seleccionado ning√∫n proyecto < /h2>\n\n        const [currentProject] = project;\n\n        const onClickDelete = () => {\n            deleteProject(currentProject.id);\n        }\n\n        return ( <\n            Fragment >\n            <\n            h2 > Proyecto: { currentProject.name } < /h2> <\n            ul className = \"listado-tareas\" > {\n                tasksProject.length === 0 ?\n                ( < li className = \"tarea\" > No hay tareas < /li>): tasksProject.map(task => ( <\n                        Task key = { task.id }\n                        task = { task } >\n                        <\n                        /Task>\n                    ))\n                } <\n                /ul> <\n                button\n                type = \"button\"\n                className = \"btn btn-eliminar\"\n                onClick = { onClickDelete } >\n                Elminar Proyecto & times; <\n                /button> <\n                /Fragment>\n            );\n        }\n\n        export default ListTask;"]},"metadata":{},"sourceType":"module"}